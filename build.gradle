/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'groovy'
    id 'com.github.ben-manes.versions' version '0.52.0'
    id 'org.nosphere.apache.rat' version '0.8.1'
}

version = '0.1'
group = 'groovy.blog'
//def groovyVersion = '5.0.0-alpha-12'
def groovyVersion = '5.0.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven{url = 'https://repository.apache.org/content/repositories/snapshots/' }
}

dependencies {
    implementation "org.apache.groovy:groovy:$groovyVersion"
    implementation "org.apache.groovy:groovy-macro:$groovyVersion"
    implementation "org.apache.groovy:groovy-ginq:$groovyVersion"
    implementation 'com.ginsberg:gatherers4j:0.11.0'
    implementation 'com.bloidonia:groovy-stream:0.9.1'
}

def jdkVersion = providers.gradleProperty('jdkVersion').getOrElse('24')

def runall = tasks.register('runAll') {
    group = 'Application'
}

FileUtil.baseNames(sourceSets.main.allSource.files).each { name ->
    def subtask = tasks.register("run$name", JavaExec) {
        dependsOn compileGroovy
        group = 'Application'
        description = "Run ${name}.groovy as a JVM application/Groovy script"
        classpath = sourceSets.main.runtimeClasspath
        mainClass = name
        javaLauncher = javaToolchains.launcherFor {
            languageVersion = JavaLanguageVersion.of(jdkVersion)
        }
    }
    if (!name.contains('Gatherer') || jdkVersion == '24') {
        runall.configure {
            dependsOn subtask
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(jdkVersion)
    }
}

sourceSets {
    main {
        groovy {
            if (jdkVersion != '24') {
                exclude '**/*Gatherer.groovy'
            }
        }
    }
}

tasks.named('rat') {
    excludes = ['**/build/**', '.idea', 'gradle/wrapper', '**/.gradle']
}
